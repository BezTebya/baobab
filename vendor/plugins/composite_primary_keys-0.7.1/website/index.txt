h1. Composite Primary Keys for Ruby on Rails/ActiveRecords

h2. What

Ruby on Rails does not support composite primary keys. This free software is an extension 
to the database layer of Rails - ActiveRecords - to support composite primary keys
as transparently as possible.

h2. Installing

<pre syntax="ruby">gem install composite_primary_keys</pre>

To prepare ActiveRecords for composite primary keys...

<pre syntax="ruby">require 'composite_primary_keys'</pre>

A class with composite primary keys would look like...

<pre syntax="ruby">class ReferenceCode < ActiveRecord::Base
  # set_primary_keys *keys - turns on composite key functionality
  set_primary_keys :reference_type_id, :reference_code
  belongs_to :reference_type, :foreign_key => "reference_type_id"
end</pre>


Take two classes - <code syntax="ruby">ReferenceType</code> and <code syntax="ruby">ReferenceCode</code>
 - where ReferenceCode has a *composite primary key*, 
 one of which is a foreign key to a parent ReferenceType.

<pre syntax="ruby">ReferenceType.primary_key
=> "reference_type_id"                   # normal single key
ReferenceCode.primary_key
=> [:reference_type_id, :reference_code] # composite keys
ReferenceCode.primary_key.to_s
=> "reference_type_id,reference_code"</pre>

Now we want to be able to find instances using the same syntax we always use for ActiveRecords...

<pre syntax="ruby">ReferenceType.find 1    # single id returns single instance
=> <ReferenceType:0x392a8c8 @attributes={"reference_type_id"=>"1", 
"abbreviation"=>"Name Prefix", "type_label"=>"NAME_PREFIX"}>
ReferenceCode.find 1,1  # composite ids returns single instance
=> <ReferenceCode:0x39218b0 @attributes={"reference_type_id"=>"1", 
"code_label"=>"MR", "abbreviation"=>"Mr", "reference_code"=>"1"}></pre>

Using "Ruby on Rails":http://www.rubyonrails.org? You'll want to your url_for helpers
to convert composite keys into strings and back again...

<pre syntax="ruby">param_id = ReferenceCode.find_first.to_param
=> "1,1"
ReferenceCode.find param_id
=> => <ReferenceCode:0x3904288 @attributes={"reference_type_id"=>"1", 
"code_label"=>"MR", "abbreviation"=>"Mr", "reference_code"=>"1"}></pre>

That is, an ActiveRecord supporting composite keys should behave transparently
throughout your application.



h2. Associations/Composite Foreign Keys

The <code syntax="ruby">has_many, has_one</code>, and <code syntax="ruby">belongs_to</code> 
associations allow for composite foreign keys.

<pre syntax="ruby">
class Product < ActiveRecord::Base
  set_primary_key :id  # redundant
  has_many :product_tariffs, :foreign_key => :product_id
  has_many :tariffs, :through => :product_tariffs, :foreign_key => :product_id
end
class ProductTariff < ActiveRecord::Base
  set_primary_keys :product_id, :tariff_id, :tariff_start_date
  belongs_to :products, :foreign_key => :product_id
  belongs_to :tariffs,  :foreign_keys => [:tariff_id, :tariff_start_date]
end
class Tariff < ActiveRecord::Base
  set_primary_keys [:tariff_id, :start_date]
  has_many :product_tariffs, :foreign_keys => [:tariff_id, :tariff_start_date]
end
</pre>

The Tariff table has a composite primary key. Hence, the 
<code syntax="ruby">belongs_to</code> association from ProductTariff to Tariff
(called :tariffs) must use a composite foreign key.

The expression can use either the
:foreign_key or :foreign_keys option to specific the ordered list of table
columns. If the column names in both tables match, then the :foreign_key(s)
option can be omitted.

Similarly, the <code syntax="ruby">has_many</code> and <code syntax="ruby">has_one</code>
commands require the same :foreign_key(s) options if the target table
doesn't have column names that match its own primary key column names.

The order of foreign keys should match the order of the primary keys in the 
parent table.

h2. Other tricks

<pre syntax="ruby">ReferenceCode.find [2,1], [2,2]  # list of composite ids
=> [
  <ReferenceCode:0x394ade8 @attributes={"reference_type_id"=>"2", 
  "code_label"=>"MALE", "abbreviation"=>"Male", "reference_code"=>"1"}>, 
  <ReferenceCode:0x394ada0 @attributes={"reference_type_id"=>"2", 
  "code_label"=>"FEMALE", "abbreviation"=>"Female", "reference_code"=>"2"}>
]</pre>

h2. Dr Nic's Blog

"http://www.drnicwilliams.com":http://www.drnicwilliams.com - for future announcements and
other stories and things.

h2. Forum

"http://groups.google.com/group/compositekeys":http://groups.google.com/group/compositekeys

h2. Licence

This code is free to use under the terms of the MIT licence. 

h2. Contact

Comments are welcome. Send an email to "Dr Nic Williams":mailto:drnicwilliams@gmail.com.
